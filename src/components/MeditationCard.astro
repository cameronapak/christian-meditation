---
interface Props {
  id: string | number;
  title: string;
  duration: number | string;
  creatorName?: string | number;
  creatorAvatarUrl?: string;
  isAudioMeditation?: boolean;
}

import { cssGradients } from "../utils/constants";

const {
  id,
  title,
  duration,
  creatorName,
  creatorAvatarUrl,
  isAudioMeditation = false,
} = Astro.props;

// Get randomBgColor but based on the result's id so that it's the same every time.
const randomBgColor = cssGradients[Number(id || 0) % cssGradients.length];
---

<li
  x-data="{ shown: false }"
  class="transition-opacity duration-500 opacity-0 p-0 m-0"
  x-bind:class="shown ? 'opacity-100' : ''"
  x-intersect:enter="shown = true"
  x-intersect:leave="shown = false"
>
  <a
    class={`relative h-full w-full p-6 cursor-pointer flex flex-col gap-4 transition active:scale-95 duration-300 aspect-video bg-red-100 rounded-2xl items-center justify-center no-underline dark:bg-blend-darken ${randomBgColor}`}
    href={`/meditation/${id}`}
  >
    <p class="balanced m-0 text-2xl text-center font-semibold line-clamp-2">
      {title}
    </p>
    <div class="absolute bottom-2 right-2 flex gap-2 items-center">
      {
        isAudioMeditation ? (
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width={16}
            height={16}
            viewBox="0 0 24 24"
          >
            <path
              fill="none"
              stroke="currentColor"
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M2 10v3m4-7v11m4-14v18m4-13v7m4-10v13m4-8v3"
            />
          </svg>
        ) : (
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width={20}
            height={20}
            viewBox="0 0 48 48"
          >
            <mask id="ipSYoutube0">
              <g fill="none" stroke-linejoin="round">
                <path
                  fill="#fff"
                  stroke="#fff"
                  stroke-width="4"
                  d="M11.064 10.414c5.543-.276 9.854-.414 12.934-.414s7.393.138 12.939.415a6 6 0 0 1 5.68 5.492c.254 3.034.381 5.706.381 8.017c0 2.339-.13 5.048-.39 8.128a6 6 0 0 1-5.587 5.483c-4.741.31-9.082.465-13.023.465c-3.94 0-8.28-.155-13.018-.465a6 6 0 0 1-5.587-5.48c-.263-3.103-.395-5.814-.395-8.131c0-2.29.129-4.963.385-8.02a6 6 0 0 1 5.68-5.49Z"
                />
                <path
                  fill="#000"
                  stroke="#000"
                  stroke-width="3.429"
                  d="M21 19.61v8.796a.857.857 0 0 0 1.33.715l6.597-4.36a.857.857 0 0 0 .006-1.427l-6.598-4.436a.857.857 0 0 0-1.335.711Z"
                />
              </g>
            </mask>
            <path
              fill="currentColor"
              d="M0 0h48v48H0z"
              mask="url(#ipSYoutube0)"
            />
          </svg>
        )
      }
      <div
        class="badge glass dark:bg-white dark:bg-opacity-10 dark:bg-blend-darken dark:text-white"
      >
        ~{duration}
      </div>
    </div>
    {
      creatorName && creatorAvatarUrl ? (
        <div class="flex gap-2 items-center">
          <img
            class="m-0 w-8 h-8 rounded-full shadow-sm bg-cover object-cover"
            src={creatorAvatarUrl || ""}
            alt={creatorAvatarUrl}
            loading="lazy"
          />
          <p class="m-0 text-lg">{creatorName}</p>
        </div>
      ) : null
    }
  </a>
</li>
