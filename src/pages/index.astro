---
import Layout from "../layouts/Layout.astro";
import Logo from "../components/Logo.astro";
import Footer from "../components/Footer.astro";
import MeditationCard from "../components/MeditationCard.astro";
import { getAllMeditations } from "../api/baserow/meditations";
import { getAllCreators } from "../api/baserow/creators";

const allMeditations = await getAllMeditations();
const allCreators = await getAllCreators();
---

<Layout
  className="bg-white dark:bg-gray-800"
  title="Soul Rest | Christian Meditations in the Way of Jesus"
  description="Soul Rest has Chrisitian meditations by various creators and is free to use."
>
  <main
    id="main"
    class="container p-6 outline-none dark:!text-gray-100"
    x-data={`{
      pickRandomMeditation() {
        if (document.getElementById("no-results")) {
          this.searchQuery = "";
          this.search();

          setTimeout(() => {
            const numberOfMeditations = $refs.meditationsList.children.length;
            const randomIndex = Math.floor(Math.random() * numberOfMeditations);

            $refs.meditationsList.children[randomIndex].querySelector('a').click();
          }, 500);

          return;
        }

        const numberOfMeditations = $refs.meditationsList.children.length;
        const randomIndex = Math.floor(Math.random() * numberOfMeditations);

        $refs.meditationsList.children[randomIndex].querySelector('a').click();
      },
      searchQuery: $persist(""),
      search() {
        const url = new URL(window.location.origin + "/api/htmx-partials/get-meditations");
        url.searchParams.set("searchQuery", this.searchQuery);
        
        if (this.filterToFavorites) {
          url.searchParams.set('ids[]', this.favoriteMeditations.join(',') || '-1');
        }
        
        window.htmx.ajax('get', url.href, {
          target: "#meditations-list",
          swap: "innerHTML",
        }).then(() => {
          // Remove the .htmx-request class from the body element.
          // This is some weird bug I'm experiencing.
          document.body.classList.remove("htmx-request");
        });
      },
      filterToFavorites: $persist(false),
      favoriteMeditations: $persist([]),
      init() {
        this.search();

        $watch('filterToFavorites', () => {
          this.search();
        })
      },
    }`}
  >
    <progress class="fixed top-0 left-0 right-0 progress htmx-indicator p-0 m-0 dark:invert"
    ></progress>
    <div class="flex flex-col gap-2 sticky top-0 py-2 bg-white dark:bg-gray-800 z-20">
      <Logo />
    </div>
    <p class="balanced max-w-[65ch] m-0 py-2 dark:text-gray-100">
      Find peace of heart and mind no matter your circumstance.
    </p>

    {/* Filters */}
    <div
      class="grid grid-cols-[1fr_auto] gap-2 items-center w-12/12 sm:w-8/12 md:w-6/12"
    >
      <input
        x-on:input.debounce="search()"
        x-model="searchQuery"
        type="search"
        placeholder="Search by title, creator, or duration"
        class="input input-bordered bg-white w-full dark:bg-gray-800 dark:!border-gray-600 dark:fill-gray-100 dark:text-gray-100"
      />

      {/* Toggle Show Favorites Button */}
      <div class="tooltip tooltip-left" data-tip="See Your Favorites">
        <button
          class="btn btn-circle btn-outline dark:border-gray-600 dark:text-gray-100 border-gray-300 hover:bg-inherit hover:border-inherit rounded-full btn-md"
          x-bind:class="{ 'text-red-700 bg-red-100 border-red-100 hover:bg-red-700 hover:border-red-700 hover:text-red-100 dark:text-red-200 dark:bg-red-900 dark:border-red-900': filterToFavorites }"
          x-on:click="filterToFavorites = !filterToFavorites"
        >
          <svg
            x-show="!filterToFavorites"
            aria-label="Outlined Heart"
            xmlns="http://www.w3.org/2000/svg"
            width={24}
            height={24}
            viewBox="0 0 512 512"
          >
            <path
              fill="currentColor"
              d="M458.4 64.3C400.6 15.7 311.3 23 256 79.3C200.7 23 111.4 15.6 53.6 64.3C-21.6 127.6-10.6 230.8 43 285.5l175.4 178.7c10 10.2 23.4 15.9 37.6 15.9c14.3 0 27.6-5.6 37.6-15.8L469 285.6c53.5-54.7 64.7-157.9-10.6-221.3zm-23.6 187.5L259.4 430.5c-2.4 2.4-4.4 2.4-6.8 0L77.2 251.8c-36.5-37.2-43.9-107.6 7.3-150.7c38.9-32.7 98.9-27.8 136.5 10.5l35 35.7l35-35.7c37.8-38.5 97.8-43.2 136.5-10.6c51.1 43.1 43.5 113.9 7.3 150.8z"
            ></path>
          </svg>

          <svg
            x-cloak
            x-show="filterToFavorites"
            aria-label="Filled Heart"
            xmlns="http://www.w3.org/2000/svg"
            width={24}
            height={24}
            viewBox="0 0 512 512"
          >
            <path
              fill="currentColor"
              d="M462.3 62.6C407.5 15.9 326 24.3 275.7 76.2L256 96.5l-19.7-20.3C186.1 24.3 104.5 15.9 49.7 62.6c-62.8 53.6-66.1 149.8-9.9 207.9l193.5 199.8c12.5 12.9 32.8 12.9 45.3 0l193.5-199.8c56.3-58.1 53-154.3-9.8-207.9z"
            ></path>
          </svg>
        </button>
      </div>
    </div>

    <button
      class="btn btn-secondary rounded-full mt-6 flex gap-2 items-center"
      x-on:click="pickRandomMeditation()"
    >
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width={16}
        height={16}
        viewBox="0 0 1024 1024"
      >
        <path
          fill="currentColor"
          d="M766 501q-25 27-62-13V322q-123 10-197 52q-15-61-70-110q112-72 267-73V23q37-39 62-12l243 207q15 16 15 38t-15 38zm-318 75q0 46 72.5 81T704 701V535q37-39 62-12l243 207q15 16 15 38t-15 38l-243 207q-25 27-62-13V832q-104 0-192.5-34.5t-140-93.5T320 576V448q0-47-72.5-82T64 322v-2q-26 0-45-19T0 255.5T19 210t45-19q104 0 192.5 34.5t140 93.5T448 448v128zM64 704v-3q123-10 197-52q15 60 70 110q-112 73-267 73q-26 0-45-19T0 767.5t19-45T64 704z"
        ></path>
      </svg>
      Pick a Random Meditation</button
    >

    <ul
      class="list-none grid max-sm:grid-cols-1 grid-cols-2 gap-4 m-0 pl-0 mt-6"
      id="meditations-list"
      x-ref="meditationsList"
    >
      {
        allMeditations.results.map((result) => {
          const creator = allCreators.results.find(
            (creator) => creator.id === result.Creator[0].id,
          );

          const creatorExists = Boolean(
            !!creator?.Avatar[0].url && !!creator?.Name,
          );

          return (
            <MeditationCard
              id={result.id}
              title={result.Title}
              duration={result.Duration.value}
              creatorName={creator?.Name}
              creatorAvatarUrl={creator?.Avatar[0].url}
            />
          );
        })
      }
    </ul>

    <Footer />
  </main>
</Layout>

<style is:global>
  /* Backup CSS for when htmx doesn't load the needed CSS to hide the progress bar */
  body:not(.htmx-request) .htmx-indicator {
    @apply hidden;
  }
</style>
