---
import Layout from "../layouts/Layout.astro";
import Logo from "../components/Logo.astro";
import Footer from "../components/Footer.astro";
import MeditationCard from "../components/MeditationCard.astro";
import { getAllMeditations } from "../api/baserow/meditations";
import { getAllCreators } from "../api/baserow/creators";

const allMeditations = await getAllMeditations();
const allCreators = await getAllCreators();
---

<Layout
  className="bg-white"
  title="Soul Rest | Christian Meditations in the Way of Jesus"
  description="Soul Rest has Chrisitian meditations by various creators and is free to use."
>
  <main
    id="main"
    class="container p-6 outline-none"
    x-data={`{
      pickRandomMeditation() {
        if (document.getElementById("no-results")) {
          this.searchQuery = "";
          this.search();

          setTimeout(() => {
            const numberOfMeditations = $refs.meditationsList.children.length;
            const randomIndex = Math.floor(Math.random() * numberOfMeditations);

            $refs.meditationsList.children[randomIndex].querySelector('a').click();
          }, 500);
          
          return;
        }

        const numberOfMeditations = $refs.meditationsList.children.length;
        const randomIndex = Math.floor(Math.random() * numberOfMeditations);

        $refs.meditationsList.children[randomIndex].querySelector('a').click();
      },
      searchQuery: $persist(""),
      search() {
        window.htmx.ajax('get', "/api/htmx-partials/get-meditations?searchQuery=" + this.searchQuery, {
          target: "#meditations-list",
          swap: "innerHTML",
          indicator: "#spinner",
        })
      },
    }`}
  >
    <div class="flex flex-col gap-2 sticky top-0 py-2 bg-white z-20">
      <Logo />
    </div>
    <p class="balanced max-w-[65ch] m-0 py-2">
      Meditations in the Way of Jesus
    </p>

    <input
      x-on:input.debounce="search()"
      x-model="searchQuery"
      type="search"
      placeholder="Search..."
      class="input input-bordered bg-white"
    />

    <button
      class="btn btn-secondary rounded-full mt-6 flex gap-2 items-center"
      x-on:click="pickRandomMeditation()"
    >
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width={16}
        height={16}
        viewBox="0 0 1024 1024"
      >
        <path
          fill="currentColor"
          d="M766 501q-25 27-62-13V322q-123 10-197 52q-15-61-70-110q112-72 267-73V23q37-39 62-12l243 207q15 16 15 38t-15 38zm-318 75q0 46 72.5 81T704 701V535q37-39 62-12l243 207q15 16 15 38t-15 38l-243 207q-25 27-62-13V832q-104 0-192.5-34.5t-140-93.5T320 576V448q0-47-72.5-82T64 322v-2q-26 0-45-19T0 255.5T19 210t45-19q104 0 192.5 34.5t140 93.5T448 448v128zM64 704v-3q123-10 197-52q15 60 70 110q-112 73-267 73q-26 0-45-19T0 767.5t19-45T64 704z"
        ></path>
      </svg>
      Pick a Random Meditation</button
    >

    <ul
      class="list-none grid max-sm:grid-cols-1 grid-cols-2 gap-4 m-0 pl-0 mt-6"
      id="meditations-list"
      x-ref="meditationsList"
    >
      {
        allMeditations.results.map((result) => {
          const creator = allCreators.results.find(
            (creator) => creator.id === result.Creator[0].id,
          );

          const creatorExists = Boolean(
            !!creator?.Avatar[0].url && !!creator?.Name,
          );

          return (
            <MeditationCard
              id={result.id}
              title={result.Title}
              duration={result.Duration.value}
              creatorName={creator?.Name}
              creatorAvatarUrl={creator?.Avatar[0].url}
            />
          );
        })
      }
    </ul>

    <Footer />
  </main>
</Layout>
