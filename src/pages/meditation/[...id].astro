---
import Layout from "../../layouts/Layout.astro";
import Logo from "../../components/Logo.astro";
import Footer from "../../components/Footer.astro";
import { getMeditationById } from "../../api/baserow/meditations";
import { getCreatorById } from "../../api/baserow/creators";

const { id } = Astro.params;

if (!id) {
  return Astro.redirect("/");
}

const meditation = await getMeditationById(id);
const creator = await getCreatorById(meditation.Creator[0].id);

const creatorName = creator?.Name || "";
const creatorAvatarUrl = creator?.Avatar?.[0]?.url || "";
const creatorWebsiteUrl = new URL(creator?.Website || "");

if (!meditation) {
  return Astro.redirect("/");
}

const title = `${meditation.Title} | by ${creatorName} | Christian Meditation on Soul Rest`;
---

<Layout className="bg-white" title={title} description={title}>
  <main class="container p-6 outline-none">
    <div class="flex gap-2 sticky top-0 py-2 bg-white z-20 items-center">
      <div class="w-full">
        <Logo />
      </div>
      <div
        class="flex gap-4"
        x-data={`{
          favoriteMeditations: $persist([]),
          get isFavorite() {
            return this.favoriteMeditations.includes(${meditation.id});
          },
          toggleMeditationFavorite(id) {
            const index = this.favoriteMeditations.indexOf(id);
            if (index > -1) {
              this.favoriteMeditations.splice(index, 1);
            } else {
              this.favoriteMeditations.push(id);
            }
          },
          shareMeditation() {
            if (navigator.share) {
              navigator.share({
                title: '${title}',
                url: window.location.href
              }).then(() => {
                console.log('Thanks for sharing!');
              }).catch(console.error);
            } else {
              navigator.clipboard.writeText(window.location.href); 
              setTimeout(() => alert('Meditation copied to your clipboard. Paste to share!'), 500);
            }
          }
        }`}
      >
        {/* Favorite Button */}
        <div class="tooltip" data-tip="Favorite this Meditation">
          <button
            x-bind:class="{ 'text-red-700 bg-red-100 border-red-100 hover:bg-red-700 hover:border-red-700 hover:text-red-100': isFavorite }"
            class="btn btn-circle btn-outline border-gray-300 rounded-full btn-sm"
            x-on:click={`toggleMeditationFavorite(${meditation.id})`}
          >
            <svg
              x-show="!isFavorite"
              aria-label="Outlined Heart"
              xmlns="http://www.w3.org/2000/svg"
              width={20}
              height={20}
              viewBox="0 0 512 512"
            >
              <path
                fill="currentColor"
                d="M458.4 64.3C400.6 15.7 311.3 23 256 79.3C200.7 23 111.4 15.6 53.6 64.3C-21.6 127.6-10.6 230.8 43 285.5l175.4 178.7c10 10.2 23.4 15.9 37.6 15.9c14.3 0 27.6-5.6 37.6-15.8L469 285.6c53.5-54.7 64.7-157.9-10.6-221.3zm-23.6 187.5L259.4 430.5c-2.4 2.4-4.4 2.4-6.8 0L77.2 251.8c-36.5-37.2-43.9-107.6 7.3-150.7c38.9-32.7 98.9-27.8 136.5 10.5l35 35.7l35-35.7c37.8-38.5 97.8-43.2 136.5-10.6c51.1 43.1 43.5 113.9 7.3 150.8z"
              ></path>
            </svg>

            <svg
              x-cloak
              x-show="isFavorite"
              aria-label="Filled Heart"
              xmlns="http://www.w3.org/2000/svg"
              width={20}
              height={20}
              viewBox="0 0 512 512"
            >
              <path
                fill="currentColor"
                d="M462.3 62.6C407.5 15.9 326 24.3 275.7 76.2L256 96.5l-19.7-20.3C186.1 24.3 104.5 15.9 49.7 62.6c-62.8 53.6-66.1 149.8-9.9 207.9l193.5 199.8c12.5 12.9 32.8 12.9 45.3 0l193.5-199.8c56.3-58.1 53-154.3-9.8-207.9z"
              ></path>
            </svg>
          </button>
        </div>
        {/* Share Button */}
        <div class="tooltip" data-tip="Share this Meditation">
          <button
            x-data
            class="btn btn-circle btn-outline border-gray-300 rounded-full btn-sm"
            x-on:click="shareMeditation()"
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              width={20}
              height={20}
              viewBox="0 0 24 24"
            >
              <path
                fill="none"
                stroke="currentColor"
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M12 5v8.5M15 7l-3-3l-3 3m-4 5v5a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2v-5"
              ></path>
            </svg>
          </button>
        </div>
      </div>
    </div>
    <div class="flex flex-col gap-0">
      <div class="text-sm breadcrumbs m-0">
        <ul class="!p-0 !m-0">
          <li><a href="/">Home</a></li>
          <li>{meditation.Title}</li>
        </ul>
      </div>
    </div>
    <iframe
      class="aspect-video w-full rounded-2xl shadow-lg bg-slate-100"
      src={"https://www.youtube.com/embed/" +
        meditation["YouTube Video ID"] +
        "?rel=0"}
      title="YouTube video player"
      frameborder="0"
      allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
      allowfullscreen></iframe>
    {
      creatorName && creatorAvatarUrl ? (
        <div class="mt-8 p-6 rounded-2xl bg-slate-100">
          <div class="flex gap-3 items-center">
            <img
              class="m-0 w-10 h-10 rounded-full shadow-sm bg-cover object-cover"
              src={creatorAvatarUrl || ""}
              alt={creatorAvatarUrl}
            />

            <p class="m-0 text-xl">
              Created by
              <a class="link" href={creatorWebsiteUrl.href} target="_blank">
                {creatorName}
              </a>
            </p>
          </div>
        </div>
      ) : null
    }
    <Footer />
  </main>
</Layout>
