---
import Layout from "../../layouts/Layout.astro";
import Logo from "../../components/Logo.astro";
import Footer from "../../components/Footer.astro";
import { getMeditationById } from "../../api/baserow/meditations";
import { getCreatorById } from "../../api/baserow/creators";

const { id } = Astro.params;

if (!id) {
  return Astro.redirect("/");
}

const meditation = await getMeditationById(id);
const creator = await getCreatorById(meditation.Creator[0].id);

const creatorName = creator?.Name || "";
const creatorAvatarUrl = creator?.Avatar?.[0]?.url || "";
const creatorWebsiteUrl = creator?.Website
  ? new URL(creator?.Website || "https://soulrest.melos.church")?.href || ""
  : "";

if (!meditation) {
  return Astro.redirect("/");
}

const title = `${meditation.Title} | by ${creatorName} | Christian Meditation on Soul Rest`;
---

<Layout className="bg-white dark:bg-slate-800 dark:!text-slate-100" title={title} description={title}>
  <main class="container p-6 outline-none">
    <div class="flex gap-2 sticky top-0 py-2 dark:bg-slate-800 bg-white z-20 items-center">
      <div class="w-full">
        <Logo />
      </div>
      <div
        class="flex gap-4"
        x-data={`{
          favoriteMeditations: $persist([]),
          get isFavorite() {
            return this.favoriteMeditations.includes(${meditation.id});
          },
          toggleMeditationFavorite(id) {
            const index = this.favoriteMeditations.indexOf(id);
            if (index > -1) {
              this.favoriteMeditations.splice(index, 1);
            } else {
              this.favoriteMeditations.push(id);
            }
          },
          shareMeditation() {
            if (navigator.share) {
              navigator.share({
                title: '${title}',
                url: window.location.href
              }).then(() => {
                console.log('Thanks for sharing!');
              }).catch(console.error);
            } else {
              navigator.clipboard.writeText(window.location.href); 
              setTimeout(() => alert('Meditation copied to your clipboard. Paste to share!'), 500);
            }
          }
        }`}
      >
        {/* Favorite Button */}
        <div class="tooltip tooltip-left" data-tip="Favorite this Meditation">
          <button
            x-bind:class="{ 'text-red-700 bg-red-100 border-red-100 hover:bg-red-700 hover:border-red-700 hover:text-red-100 dark:text-red-200 dark:bg-red-900 dark:border-red-900': isFavorite }"
            class="btn dark:border-gray-600 dark:text-gray-100 dark:hover:bg-gray-600 btn-circle btn-outline border-gray-300 rounded-full btn-sm"
            x-on:click={`toggleMeditationFavorite(${meditation.id})`}
          >
            <svg
              x-show="!isFavorite"
              aria-label="Outlined Heart"
              xmlns="http://www.w3.org/2000/svg"
              width={20}
              height={20}
              viewBox="0 0 512 512"
            >
              <path
                fill="currentColor"
                d="M458.4 64.3C400.6 15.7 311.3 23 256 79.3C200.7 23 111.4 15.6 53.6 64.3C-21.6 127.6-10.6 230.8 43 285.5l175.4 178.7c10 10.2 23.4 15.9 37.6 15.9c14.3 0 27.6-5.6 37.6-15.8L469 285.6c53.5-54.7 64.7-157.9-10.6-221.3zm-23.6 187.5L259.4 430.5c-2.4 2.4-4.4 2.4-6.8 0L77.2 251.8c-36.5-37.2-43.9-107.6 7.3-150.7c38.9-32.7 98.9-27.8 136.5 10.5l35 35.7l35-35.7c37.8-38.5 97.8-43.2 136.5-10.6c51.1 43.1 43.5 113.9 7.3 150.8z"
              ></path>
            </svg>

            <svg
              x-cloak
              x-show="isFavorite"
              aria-label="Filled Heart"
              xmlns="http://www.w3.org/2000/svg"
              width={20}
              height={20}
              viewBox="0 0 512 512"
            >
              <path
                fill="currentColor"
                d="M462.3 62.6C407.5 15.9 326 24.3 275.7 76.2L256 96.5l-19.7-20.3C186.1 24.3 104.5 15.9 49.7 62.6c-62.8 53.6-66.1 149.8-9.9 207.9l193.5 199.8c12.5 12.9 32.8 12.9 45.3 0l193.5-199.8c56.3-58.1 53-154.3-9.8-207.9z"
              ></path>
            </svg>
          </button>
        </div>
        {/* Share Button */}
        <div class="tooltip tooltip-left" data-tip="Share this Meditation">
          <button
            x-data
            class="btn btn-circle btn-outline dark:border-gray-600 dark:text-gray-100 dark:hover:bg-gray-600 border-gray-300 rounded-full btn-sm"
            x-on:click="shareMeditation()"
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              width={20}
              height={20}
              viewBox="0 0 24 24"
            >
              <path
                fill="none"
                stroke="currentColor"
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M12 5v8.5M15 7l-3-3l-3 3m-4 5v5a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2v-5"
              ></path>
            </svg>
          </button>
        </div>
      </div>
    </div>

    {/* Breadcrumbs */}
    <div class="flex flex-col gap-0 dark:text-slate-200">
      <div class="text-sm breadcrumbs m-0">
        <ul class="!p-0 !m-0">
          <li><a href="/" class="dark:text-slate-200">Home</a></li>
          <li>
            {meditation.Title}
            <p class="m-0 ml-2 badge bg-slate-100 border-none dark:text-slate-200 dark:bg-slate-700">
              ~{meditation.Duration.value}
            </p>
          </li>
        </ul>
      </div>
    </div>
    {
      meditation["YouTube Video ID"] ? (
        <iframe
          class="aspect-video w-full rounded-2xl shadow-lg bg-slate-100 dark:bg-slate-700"
          src={
            "https://www.youtube.com/embed/" +
            meditation["YouTube Video ID"] +
            "?rel=0"
          }
          title="YouTube video player"
          frameborder="0"
          allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
          allowfullscreen
        />
      ) : null
    }

    {
      meditation["Audio File URL"] ? (
        <div
          x-data={`{ 
            isPlaying: false,
            handleClick() { 
              this.isPlaying = !this.isPlaying;
              this.hasClickedPlay = true;
              if (this.isPlaying) {
                this.setUpAudioProgressInterval();
                $refs.audioEl.play();
              } else {
                this.tearDownAudioProgressInterval();
                $refs.audioEl.pause();
              }
            },
            hasClickedPlay: false,
            goForwards15Seconds() {
              if ($refs.audioEl?.currentTime) {
                $refs.audioEl.currentTime += 15;
              }
            },
            goBackwards15Seconds() {
              if ($refs.audioEl?.currentTime) {
                $refs.audioEl.currentTime -= 15;
              }
            },
            updateAudioProgress() {
              const percentage = Math.floor($refs.audioEl.currentTime / $refs.audioEl.duration * 100) || 0;
              $refs.radialProgressEl.style.setProperty('--value', percentage.toString());
              if (percentage === 100) {
                this.tearDownAudioProgressInterval();
                this.isPlaying = false;
              }
            },
            remainingTime() {
              console.log('how many times is this called?')
              return Math.floor($refs.audioEl.duration - $refs.audioEl.currentTime);
            },
            setUpAudioProgressInterval() {
              if (!this.audioProgressInterval) {
                this.audioProgressInterval = setInterval(this.updateAudioProgress, 500);
              }
            },
            tearDownAudioProgressInterval() {
              if (this.audioProgressInterval) {
                clearInterval(this.audioProgressInterval);
                this.audioProgressInterval = null;
              }
            },
            audioProgressInterval: null,
            init() {
              this.setUpAudioProgressInterval();

              $nextTick(() => {
                // When I leave the page, disable the interval.
                window.addEventListener('swup:page:view', () => {
                  this.tearDownAudioProgressInterval();
                }, {
                  once: true
                });
              })
            }
          }`}
          x-on:keyup.space.window="handleClick()"
          class="flex justify-center items-center flex-col gap-4"
        >
          <div class="flex flex-col gap-0 text-center justify-center items-center">
            <h1 class="text-center balanced">{meditation.Title}</h1>
          </div>

          <div class="flex justify-center items-center gap-4">
            <button
              x-on:click="goBackwards15Seconds()"
              class="btn btn-circle btn-outline border-slate-200 dark:border-gray-600 dark:hover:bg-slate-600 dark:text-slate-200 border-gray-300 hover:bg-inherit hover:border-inherit rounded-full btn-md"
              aria-label="Go back 15 seconds"
            >
              <svg
                class="-translate-y-0.5"
                xmlns="http://www.w3.org/2000/svg"
                width={24}
                height={24}
                viewBox="0 0 56 56"
              >
                <path
                  fill="currentColor"
                  d="M28 54.402c13.055 0 23.906-10.828 23.906-23.906c0-11.531-8.437-21.305-19.383-23.46v-3.33c0-1.664-1.148-2.11-2.437-1.195l-7.477 5.226c-1.054.75-1.078 1.875 0 2.649l7.453 5.25c1.313.937 2.461.492 2.461-1.196v-3.35c8.86 2.015 15.375 9.914 15.375 19.406A19.84 19.84 0 0 1 28 50.418c-11.063 0-19.945-8.86-19.922-19.922c.023-6.656 3.258-12.539 8.25-16.101c.961-.727 1.266-1.829.656-2.813c-.562-.96-1.851-1.219-2.883-.422C8.055 15.543 4.094 22.621 4.094 30.496c0 13.078 10.828 23.906 23.906 23.906m-6.961-14.297c.914 0 1.476-.632 1.476-1.617V23.7c0-1.195-.585-1.828-1.64-1.828c-.656 0-1.125.211-1.969.774l-3.21 2.18c-.54.398-.798.82-.798 1.359c0 .773.61 1.43 1.36 1.43c.469 0 .703-.095 1.125-.446l2.203-1.617v12.937c0 .961.562 1.617 1.453 1.617m11.906.282c3.89 0 6.446-2.508 6.446-6.282c0-3.445-2.32-5.906-5.649-5.906c-1.406 0-2.906.633-3.586 1.688l.399-5.063h7.007c.704 0 1.29-.562 1.29-1.36c0-.796-.586-1.312-1.29-1.312h-7.476c-1.242 0-1.922.703-2.016 1.946l-.515 6.75c-.094 1.172.515 1.734 1.546 1.734c.774 0 1.102-.14 1.758-.656c.914-.82 1.617-1.149 2.555-1.149c1.828 0 3.047 1.336 3.047 3.375c0 2.063-1.453 3.563-3.375 3.563c-1.406 0-2.578-.797-3.188-2.016c-.351-.61-.773-.937-1.359-.937c-.774 0-1.312.562-1.312 1.36c0 .327.07.632.187.937c.633 1.687 2.695 3.328 5.531 3.328"
                />
              </svg>
            </button>

            <button
              class="relative btn btn-circle btn-lg bg-blue-100 text-blue-800 !h-24 !w-24 hover:bg-blue-200 border-none overflow-hidden"
              x-on:click="handleClick()"
              x-ref="playBtn"
            >
              <svg
                x-cloak
                x-show="!isPlaying"
                aria-label="Play Audio"
                class="translate-x-0.5"
                xmlns="http://www.w3.org/2000/svg"
                width={32}
                height={32}
                viewBox="0 0 14 14"
              >
                <path
                  fill="currentColor"
                  fill-rule="evenodd"
                  d="M2.676.02a1.74 1.74 0 0 0-.845.218a1.64 1.64 0 0 0-.895 1.433v10.677a1.64 1.64 0 0 0 .895 1.433a1.74 1.74 0 0 0 1.718-.016l8.63-5.338a1.61 1.61 0 0 0-.001-2.876L3.548.253A1.74 1.74 0 0 0 2.676.02"
                  clip-rule="evenodd"
                />
              </svg>
              <svg
                x-cloak
                x-show="isPlaying"
                aria-label="Pause Audio"
                xmlns="http://www.w3.org/2000/svg"
                width={40}
                height={40}
                viewBox="0 0 320 512"
              >
                <path
                  fill="currentColor"
                  d="M48 64C21.5 64 0 85.5 0 112v288c0 26.5 21.5 48 48 48h32c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48H48zm192 0c-26.5 0-48 21.5-48 48v288c0 26.5 21.5 48 48 48h32c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48h-32z"
                />
              </svg>
              <div
                x-cloak
                x-show="hasClickedPlay"
                x-ref="radialProgressEl"
                class="absolute radial-progress scale-[120%]"
                role="progressbar"
              />
            </button>

            <button
              x-on:click="goForwards15Seconds()"
              class="btn btn-circle btn-outline border-slate-200 dark:border-gray-600 dark:hover:bg-slate-600 dark:text-slate-200 border-gray-300 hover:bg-inherit hover:border-inherit rounded-full btn-md"
              aria-label="Go forward 15 seconds"
            >
              <svg
                class="-translate-y-0.5"
                xmlns="http://www.w3.org/2000/svg"
                width={24}
                height={24}
                viewBox="0 0 56 56"
              >
                <path
                  fill="currentColor"
                  d="M28 54.402c13.055 0 23.906-10.828 23.906-23.906c0-7.875-3.984-14.953-10.008-19.336c-1.03-.797-2.32-.539-2.906.422c-.586.984-.281 2.086.656 2.813c4.993 3.562 8.25 9.445 8.274 16.101C47.945 41.56 39.039 50.418 28 50.418c-11.063 0-19.899-8.86-19.899-19.922c0-9.492 6.516-17.39 15.376-19.406v3.375c0 1.664 1.148 2.11 2.413 1.195l7.5-5.25c1.055-.726 1.079-1.851 0-2.625l-7.476-5.25c-1.29-.937-2.437-.492-2.437 1.196v3.304C12.507 9.168 4.094 18.965 4.094 30.496c0 13.078 10.828 23.906 23.906 23.906m-6.961-14.297c.914 0 1.476-.632 1.476-1.617V23.7c0-1.195-.585-1.828-1.64-1.828c-.656 0-1.125.211-1.969.774l-3.21 2.18c-.54.398-.798.82-.798 1.359c0 .773.61 1.43 1.36 1.43c.469 0 .703-.095 1.125-.446l2.203-1.617v12.937c0 .961.562 1.617 1.453 1.617m11.906.282c3.89 0 6.446-2.508 6.446-6.282c0-3.445-2.32-5.906-5.649-5.906c-1.406 0-2.906.633-3.586 1.688l.399-5.063h7.007c.704 0 1.29-.562 1.29-1.36c0-.796-.586-1.312-1.29-1.312h-7.476c-1.242 0-1.922.703-2.016 1.946l-.515 6.75c-.094 1.172.515 1.734 1.546 1.734c.774 0 1.102-.14 1.758-.656c.914-.82 1.617-1.149 2.555-1.149c1.828 0 3.047 1.336 3.047 3.375c0 2.063-1.453 3.563-3.375 3.563c-1.406 0-2.578-.797-3.188-2.016c-.351-.61-.773-.937-1.359-.937c-.774 0-1.312.562-1.312 1.36c0 .327.07.632.187.937c.633 1.687 2.695 3.328 5.531 3.328"
                />
              </svg>
            </button>
          </div>

          <audio x-ref="audioEl" x-on:ended="this.isPlaying = false" src={meditation["Audio File URL"]} />
        </div>
      ) : null
    }

    {
      creatorName && creatorAvatarUrl ? (
        <div class="mt-8 p-6 rounded-2xl bg-slate-100 dark:bg-slate-700">
          <div class="flex gap-3 items-center">
            <img
              class="m-0 w-10 h-10 rounded-full shadow-sm bg-cover object-cover"
              src={creatorAvatarUrl || ""}
              alt={creatorAvatarUrl}
              loading="lazy"
            />

            <p class="m-0 text-xl">
              Created by
              <a class="link dark:text-slate-200" href={creatorWebsiteUrl} target="_blank">
                {creatorName}
              </a>
            </p>
          </div>
        </div>
      ) : null
    }
    <Footer />
  </main>
</Layout>
